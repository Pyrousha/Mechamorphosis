<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
sprite_index = spr_tileset_grass;
if (room == rm_lv2)
{
    sprite_index = spr_tileset_city;
}
alarm[0] = 1;
wallL = "false";
wallR = "false";
wallU = "false";
wallD = "false";
hImgWidth = sprite_width/2;
hImgHeight = sprite_height/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_point(x-hImgWidth,y+hImgHeight,obj_wall,false,true))
{
    wallL = "true";
}
if (collision_point(x + 3*hImgWidth,y+hImgHeight,obj_wall,false,true))
{
    wallR = "true";
}
if (collision_point(x+hImgWidth,y-hImgHeight,obj_wall,false,true))
{
    wallU = "true";
}
if (collision_point(x+hImgWidth,y + 3*hImgHeight,obj_wall,false,true))
{
    wallD = "true";
}

if (wallU == "true")
{
    if (wallL == "true")
    {
        if (wallD == "true")
        {
            if (wallR == "true")
            {
                if (!collision_point(x-hImgWidth,y-hImgHeight,obj_wall,false,true)) //Top left
                {
                    image_index = 11;
                    exit;
                }
                if (!collision_point(x + 3*hImgWidth,y-hImgHeight,obj_wall,false,true)) //Top Right
                {
                    image_index = 10;
                    exit;
                }
                if (!collision_point(x-hImgWidth,y+hImgHeight,obj_wall,false,true)) //Bottom left
                {
                    image_index = 5;
                    exit;
                }
                if (!collision_point(x + 3*hImgWidth,y+hImgHeight,obj_wall,false,true)) //Bottom Right
                {
                    image_index = 4;
                    exit;
                }
                image_index = 7;
                exit;
            }
            else
            {
                image_index = 8;
                exit;
            }
        }
        else //no wallD
        {
            if (wallR == "true")
            {
                image_index = 13;
                exit;
            }
            else
            {
                image_index = 14;
                exit;
            }
        }
    }
    else //no wallL
    {
        if (wallR == "true")
        {
            if (wallD == "true")
            {
                image_index = 6;
                exit;
            }
            else
            {
                image_index = 12;
                exit;
            }
        }
    }
}
else //no wallU
{
    if (wallD == "true")
    {
        if (wallR == "true")
        {
            if (wallL == "true")
            {
                image_index = 1;
                exit;
            }
            else //no wallL
            {
                image_index = 0;
                exit;
            }
        }
        else //no WallR
        {
            image_index = 2;
            exit;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

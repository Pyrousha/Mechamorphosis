<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 0;
timerMax = 15;
dir = 1;
obj_hero.dead = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (timer &gt;= timerMax)
{
    if (dir == 1)
    {
        dir = -1;
        obj_hero.hp = obj_hero.hpMax;
        obj_hero.invincible = false;
        obj_hero.x = obj_hero.startX;
        obj_hero.y = obj_hero.startY;
        view_xview = floor(obj_hero.x/view_wview)*view_wview;
        view_yview = floor(obj_hero.y/view_hview)*view_hview;
        obj_hero.speed = 0;
        obj_hero.direction = 0;
        obj_hero.hSpd = 0;
        obj_hero.vSpd = 0;
        obj_hero.spriteObj.image_blend = c_white;
        obj_hero.spriteObj.image_alpha = 1;
        obj_hero.respawning = "false";
        obj_hero.spriteObj.visible = true;
        obj_hero.view_x = view_xview;
        obj_hero.view_y = view_yview;
        obj_hero.view_x1 = obj_hero.view_x;
        obj_hero.view_y1 = obj_hero.view_y;
        obj_hero.boostState = "charged";
        if (instance_exists(obj_caveCollapse))
        {
            if (obj_hero.x &lt; 8320)
            {
                obj_caveCollapse.x = obj_caveCollapse.startX;
                obj_caveCollapse.go = false;
            }
        }
        with (obj_enemy)
        {
            alarm[0] = 1;
        }
        with (obj_boss1)
        {
            alarm[0] = 1;
        }
        with (obj_boss1_arena_top)
        {
            alarm[0] = 1;
        }   
        with (obj_heart_pickup)
        {
            instance_destroy();
        }
    }
}

if (timer &lt; 0)
{
    obj_hero.dead = false;
    obj_hero.hSpd = 0;
    obj_hero.vSpd = 5;
    instance_destroy();
}
else
{
    timer += dir;
}
draw_set_colour(c_black);
draw_set_alpha(timer/timerMax);
draw_rectangle(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,false);
draw_set_colour(c_white);
draw_set_alpha(1);
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

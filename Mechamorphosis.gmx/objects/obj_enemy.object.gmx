<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slime_hitbox</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables
hSpd = -5;
vSpd = 0;
dir = 0;

//Stats
//Ground Movement
maxHSpd = 5;

//Combat
hpMax = 1;
hp = hpMax;
damage = 0.5;

//Sprite
image_speed = 0.125;
spriteObj = instance_create(x+sprite_width/2,y+sprite_width/2,obj_enemy_sprite);
spriteObj.image_speed = image_speed;
spriteObj.parentObj = self;

lootList = ds_list_create();
ds_list_add(lootList,obj_heart_pickup);
dropRate = 0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
/*
if (isInView())
{
    show_debug_message("hSpd: " + string(hSpd));
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement, input, and collision

if (obj_hero.roomMoving == "true") || (isInView() == false)
{
    spriteObj.image_speed = 0;
    exit;
}
else
{
    spriteObj.image_speed = image_speed;
}


hbL = x;
hbR = x+sprite_width-1;
hbT = y;
hbB = y+sprite_height-1;

round(x);
round(y);
round(hSpd);
round(vSpd);


//Horizontal Collision
//Check off edge
if ((!collision_point(hbL+hSpd,hbB+1,obj_wall,false,true)) || (!collision_point(hbR+hSpd,hbB+1,obj_wall,false,true)) || (hbR+hSpd &gt; view_xview + view_wview) || (x+hSpd&lt;view_xview))
{
    hSpd = 0-hSpd;
}

//Left
var inst = collision_rectangle(hbL+hSpd,hbT,hbL,hbB,obj_wall,false,true);
if (inst!=noone)
{
    hSpd = (inst.x+inst.sprite_width)-x;
    if (hSpd == 0)
    {
        hSpd = maxHSpd;
    }
}
else
{
    //Right
    var inst = collision_rectangle(hbR,hbT,hbR+hSpd,hbB,obj_wall,false,true);
    if (inst!= noone)
    {
        hSpd = (inst.x - (sprite_width+x));
        if (hSpd == 0)
        {
            hSpd = 0-maxHSpd;
        }
    }
}

//Vertical Collision
//Up
var inst = collision_rectangle(hbL,hbT,hbR,hbT-vSpd,obj_wall,false,false);
if (inst!=noone)
{
    vSpd = hbT - (inst.y+inst.sprite_height);
}
else //Down
{
    var inst = collision_rectangle(hbL,hbB,hbR,hbB-vSpd + 1,obj_wall,false,false);
    if (inst!=noone)
    {
        vSpd = (hbB+1) - inst.y;
    }
}

x+=hSpd;
y-=vSpd;
spriteObj.x = x + (sprite_width/2);
spriteObj.y = y + (sprite_height/2);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hero">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!obj_hero.invincible)
{
    heroTakeDamage(damage);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

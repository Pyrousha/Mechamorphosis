<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_gain(global.levelMusic,0,1000);
textList = ds_list_create()
ds_list_add(textList,"YOU HAVE FALLEN...");
ds_list_add(textList,"BUT THIS IS NOT THE END");
ds_list_add(textList,"THERE IS STILL A WAY");
ds_list_add(textList,"YOU MUST...");
ds_list_add(textList,"TRAVEL BACK IN TIME!");
i=0;

text = (ds_list_find_value(textList,i))
textX = room_width/2;
textY = 160;
opa = 0;
opaIn = 0.05;
opaOut = opaIn;
state = "fadeIn";

ignoreInput = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((keyboard_check_pressed(vk_space)) &amp;&amp; (ignoreInput == false))
{
    switch(state)
    {
        case ("fadeIn"):
        {
            opa = 1;
            break;
        }
        case ("fadeOut"):
        {
            opa = 0;   
            break;
        }
        case ("waiting"):
        {
            if (i &lt; ds_list_size(textList) - 1)
            {
                state = "fadeOut";
            }
            break;
        }
    }
}
switch(state)
{
    case ("fadeIn"):
    {
        if (i &gt;= ds_list_size(textList) - 1)
        {
            obj_button_menu.image_alpha = opa;
            obj_button_respawn.image_alpha = opa;
        }
        opa = min(1,opa+opaIn);
        if (opa &gt;= 1)
        {
            state = "waiting"
        }
        break;
    }
    case ("fadeOut"):
    {
        opa = max(0,opa-opaOut);
        if (opa &lt;= 0)
        {
            i++;
            if (i &gt; ds_list_size(textList) - 1)
            {
                i = ds_list_size(textList) - 1;
                ignoreInput = true;
            }
            else
            {
                text = (ds_list_find_value(textList,i))
                state = "fadeIn";
            }
        }
        break; 
    }
}
draw_set_alpha(opa);
draw_set_font(fnt_12x10);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text(textX,textY,text);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
